{"version":3,"file":"static/js/732.6bdb2d02.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,mCAAG,sGACbF,IAAAA,IAAU,wBADG,uBAC5BG,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,qDAKtBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,oBADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAS,mCAAG,WAAMD,GAAN,yFACAL,IAAAA,IAAA,iBAAoBK,EAApB,aADA,uBACfF,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTI,EAAY,mCAAG,WAAMF,GAAN,yFACHL,IAAAA,IAAA,iBAAoBK,EAApB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,yFACVV,IAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACNC,MAAOH,EACPC,KAAMA,KAJuB,uBACzBP,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,uD,mICzBnBU,E,QAAYC,GAAAA,IAAH,oG,SCKP,SAASC,IACtB,OAAyBC,EAAAA,EAAAA,UAAS,MAAlC,eAAMC,EAAN,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAgBe,GAASK,MAAK,SAAAC,GAAG,OAAIP,EAASO,EAAb,GAClC,GAAE,CAACN,KAGF,8BACGF,IACC,6BACA,mBACAS,KAAK,SACLC,MAAO,CAAEC,QAAS,OAClBC,QAAS,kBAAMR,GAAU,EAAhB,EAHT,sBAOE,iBAAKM,MAAO,CAAEG,QAAS,OAAQC,IAAK,OAAQC,OAAQ,UAApD,WACE,gBACEC,IACEhB,EAAMiB,YAAN,6CAC0CjB,EAAMiB,aADhD,qFAIFC,IAAI,GACJC,MAAM,SAER,UAACvB,EAAD,YACE,wBAAKI,EAAMoB,kBACX,0BACE,gBACEJ,IAAI,oHACJE,IAAI,OACJC,MAAM,OACNT,MAAO,CAAEG,QAAS,kBACjB,IACFb,EAAMqB,aAPT,UASA,sCACA,uBAAIrB,EAAMsB,YACV,oCACA,wBACGtB,EAAMuB,OAAOC,KAAI,WAAWC,GAAX,IAAGjC,EAAH,EAAGA,KAAH,OAChB,wBAAaA,GAAJiC,EADO,OAIpB,4BACE,mDACA,SAAC,KAAD,CAAMC,GAAE,OAAR,mBACA,SAAC,KAAD,CAAMA,GAAE,UAAR,+BAIN,SAAC,KAAD,QAKT,C","sources":["cervices/api/api.js","pages/MovieDetails/movieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd500b86f34dc7270e191688956d94f6d',\n};\n\nexport const fetchMostPopularMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fetchMoviesForQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  gap: 10px;\n`;\n\n","import { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useNavigate } from 'react-router-dom';\nimport { fetchMovieForId } from 'cervices/api/api';\n\nimport { StyledDiv } from './movieDetails.styled.js';\n\n\nexport default function MovieDetails() {\n  const[movie, setMovie] = useState(null);\n  \n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieForId(movieId).then(res => setMovie(res));\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <main>\n        <button\n        type=\"button\"\n        style={{ padding: '5px' }}\n        onClick={() => navigate(-1)} \n      >\n        go Back \n      </button>\n          <div style={{ display: 'flex', gap: '30px', margin: '30px 0' }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                  : `https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=2000`\n              }\n              alt=\"\"\n              width=\"350\"\n            />\n            <StyledDiv>\n              <h2>{movie.original_title}</h2>\n              <p>\n                <img\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Star_icon_stylized.svg/512px-Star_icon_stylized.svg.png\"\n                  alt=\"star\"\n                  width=\"20px\"\n                  style={{ display: 'inline-block' }}\n                />{' '}\n                {movie.vote_average}/10\n              </p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(({ name }, i) => (\n                  <li key={i}>{name}</li>\n                ))}\n              </ul>\n              <div>\n                <h2>aditional information</h2>\n                <Link to={`cast`}>Cast</Link>\n                <Link to={`reviews`}>Reviews</Link>\n              </div>\n            </StyledDiv>\n          </div>\n          <Outlet />\n        </main>\n      )}\n    </>\n  );\n}"],"names":["axios","api_key","fetchMostPopularMovies","data","fetchMovieForId","id","fetchCast","fetchReviews","fetchMoviesForQuery","name","page","params","query","StyledDiv","styled","MovieDetails","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","useEffect","then","res","type","style","padding","onClick","display","gap","margin","src","poster_path","alt","width","original_title","vote_average","overview","genres","map","i","to"],"sourceRoot":""}